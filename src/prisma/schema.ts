import { SchemaObject } from '@paljs/types'

export const schema: SchemaObject = {
  models: [
    {
      name: 'User',
      fields: [
        {
          name: 'id',
          type: 'String',
          isId: true,
          unique: false,
          defaultValue: 'auto()) @map("_id"',
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          map: '_id',
          relationField: false,
        },
        {
          name: 'name',
          type: 'String',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'email',
          type: 'String',
          isId: false,
          unique: true,
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'birthday',
          type: 'DateTime',
          isId: false,
          unique: false,
          list: false,
          required: false,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'createAccount',
          type: 'DateTime',
          isId: false,
          unique: false,
          defaultValue: 'now()',
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'password',
          type: 'String',
          isId: false,
          unique: false,
          list: false,
          required: false,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'authMethod',
          type: 'EAuthMethod',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'enum',
          documentation: '',
          relationField: false,
        },
        {
          name: 'googleSub',
          type: 'String',
          isId: false,
          unique: false,
          list: false,
          required: false,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'profilePicture',
          type: 'String',
          isId: false,
          unique: false,
          list: false,
          required: false,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'emails',
          type: 'Email',
          isId: false,
          unique: false,
          list: true,
          required: false,
          kind: 'object',
          documentation: '',
          relation: { name: 'UserEmails' },
        },
      ],
      documentation: '',
    },
    {
      name: 'Email',
      fields: [
        {
          name: 'id',
          type: 'String',
          isId: true,
          unique: false,
          defaultValue: 'auto()) @map("_id"',
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          map: '_id',
          relationField: false,
        },
        {
          name: 'userId',
          type: 'String',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          map: '_userId',
          relationField: true,
        },
        {
          name: 'user',
          type: 'User',
          isId: false,
          unique: false,
          list: false,
          required: false,
          kind: 'object',
          documentation: '',
          relation: {
            name: 'UserEmails',
            fields: ['userId'],
            references: ['id'],
          },
        },
        {
          name: 'templateEmail',
          type: 'ETemplateEmail',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'enum',
          documentation: '',
          relationField: false,
        },
        {
          name: 'dateSent',
          type: 'DateTime',
          isId: false,
          unique: false,
          defaultValue: 'now()',
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
      ],
      documentation: '',
    },
  ],
  enums: [
    { name: 'EAuthMethod', fields: ['LOCAL', 'GOOGLE', 'BOTH'] },
    {
      name: 'ETemplateEmail',
      fields: ['WELCOME', 'TWOFACTORAUTH', 'SUPPORT', 'OTHER'],
    },
  ],
  dataSource: { provider: 'mongodb', url: 'env("DB_CONNECTION_STRING")' },
  generators: [{ name: 'client', provider: 'prisma-client-js' }],
}
