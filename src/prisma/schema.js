export default {
  models: [
    {
      name: 'User',
      fields: [
        {
          name: 'id',
          type: 'String',
          isId: true,
          unique: false,
          defaultValue: 'auto()) @map("_id"',
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          map: '_id',
          relationField: false,
        },
        {
          name: 'name',
          type: 'String',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'email',
          type: 'String',
          isId: false,
          unique: true,
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'birthday',
          type: 'DateTime',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'password',
          type: 'String',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'emails',
          type: 'Email',
          isId: false,
          unique: false,
          list: true,
          required: false,
          kind: 'object',
          documentation: '',
          relation: { name: 'UserEmails' },
        },
      ],
      documentation: '',
    },
    {
      name: 'Email',
      fields: [
        {
          name: 'id',
          type: 'String',
          isId: true,
          unique: false,
          defaultValue: 'auto()) @map("_id"',
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          map: '_id',
          relationField: false,
        },
        {
          name: 'userId',
          type: 'String',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          map: '_userId',
          relationField: true,
        },
        {
          name: 'user',
          type: 'User',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'object',
          documentation: '',
          relation: {
            name: 'UserEmails',
            fields: ['userId'],
            references: ['id'],
          },
        },
        {
          name: 'to',
          type: 'String',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'subject',
          type: 'String',
          isId: false,
          unique: false,
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
        {
          name: 'dateSent',
          type: 'DateTime',
          isId: false,
          unique: false,
          defaultValue: 'now()',
          list: false,
          required: true,
          kind: 'scalar',
          documentation: '',
          relationField: false,
        },
      ],
      documentation:
        '  }\n  emails   Email[]  @relation("UserEmails")\n  password String   \n  birthday DateTime \n  email    String   @unique\n  name     String\n  id       String   @id @default(auto()) @map("_id") @db.ObjectId\nmodel User {',
    },
  ],
  enums: [],
  dataSource: { provider: 'mongodb', url: 'env("DB_CONNECTION_STRING")' },
  generators: [{ name: 'client', provider: 'prisma-client-js' }],
}
